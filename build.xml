<project name="Metacraft" default="main">
    <property environment="env"/>

	<property name="forge.dir" value="../forge"/>

	<target name="git-detail">
        <exec executable="git" outputproperty="git.time">
            <arg value="log"/>
            <arg value="-n1"/>
            <arg value="--pretty=%at"/>
        </exec>
        <exec executable="git" outputproperty="git.commit">
            <arg value="log"/>
            <arg value="-n1"/>
            <arg value="--pretty=%H"/>
        </exec>
        <exec executable="git" outputproperty="git.tags">
            <arg value="tag"/>
            <arg value="--contains"/>
            <arg value="${git.commit}"/>
        </exec>
        <exec executable="git" outputproperty="git.describe">
            <arg value="describe"/>
            <arg value="--dirty"/>
            <arg value="--always"/>
            <arg value="--abbrev=40"/>
            <arg value="--tags"/>
        </exec>
        <exec executable="git" outputproperty="git.branch">
            <arg value="branch"/>
            <arg value="--no-color"/>
        </exec>
		<groovy>
			//<![CDATA[
			import java.math.BigInteger;
			import java.util.Queue;
			import java.util.ArrayDeque;
			import java.text.SimpleDateFormat;
			def time = new Date();
			def commitStr = properties["git.commit"];
			def commit = new BigInteger( commitStr, 16 );
			def tagLines = properties["git.tags"];
			Queue<String> tags = new ArrayDeque<>();
			int tagLinesLen = tagLines.length();
			if ( tagLines.length() != 0 ) {
				int cur = 0;
				int end = 0;
				for ( ; (end = tagLines.indexOf('\n', end)) != -1; cur = end+1 ) {
					tags.add( tagLines.substring( cur, tagLines.charAt(end-1) == '\r' ? end-1 : end ) );
				}
				if ( end == -1 && (tagLinesLen-1) > cur )
					tags.add( tagLines.substring( cur, tagLinesLen ) );
			}
			properties["git.tagline"] = tags.join('-');
			def wds = new SimpleDateFormat("YYYY'w'w'd'F").format(time);
			properties["weekdaystamp"] = wds;
			def desc = properties["git.describe"];
			properties["git.dirty"] = "no";
			if ( desc == commitStr ) {
				properties["git.describe"] = wds;
				properties["git.version"] = wds; 
			} else if ( desc.endsWith( commitStr ) ) {
				def vs = desc.substring( 0, desc.length() - 42 );
				properties["git.describe"] = vs;
				properties["git.version"] = vs;
			} else if ( desc.endsWith( "-dirty" ) ) {
				properties["git.dirty"] = "yes";
				if ( desc.length() > 40 ) {
					def vs = desc.substring( 0, desc.length() - 48 );
					properties["git.describe"] = vs + '-dirty';
					properties["git.version"] = vs;
				} else {
					properties["git.version"] = desc.substring( 0, desc.length() - 6 );
				}
			}
			println "git.describe = ${properties['git.describe']}";
			println "git.version = ${properties['git.version']}";
			println "weekdaystamp = ${properties['weekdaystamp']}";
			println "git.tagline = ${properties['git.tagline']}";
			println "git.commit = ${properties['git.commit']}";
			//]]>
		</groovy>
    </target>
	<target name="set-version" depends="git-detail">
		<copy file="src/mcmod.info" todir="bin" overwrite="yes">
			<filterset begintoken="@" endtoken="@">
				<filter token="VERSION" value="${git.version}"/>
			</filterset>
		</copy>
	    <propertyfile file="bin/version.properties">
	      <entry key="Metacraft.version" type="string" value="${git.describe}-${weekdaystamp}-${git.commit}"/>
	    </propertyfile>
	</target>
    <target name="package" depends="set-version">
    	<fail message="Metacraft-${git.describe}.jar has already been created.">
	    	<condition>
	    		<and>
	    			<isfalse value="${git.dirty}" />
	    	    	<available file="jar/Metacraft-${git.describe}.jar"/>
	    		</and>
	    	</condition>
    	</fail>
    	<jar destfile="jar/Metacraft-${git.describe}.jar" level="9" duplicate="preserve">
        	<fileset dir="bin" />
        	<fileset dir="src" />
        </jar>
    </target>
	<!-- Perform forge install, copy source to mcp/src, recompile/obfuscate, package to jar -->
    <target name="main" depends="package"/>

</project>